apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodejs-app
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: nodejs
  template:
    metadata:
      labels:
        app: nodejs
    spec:
      containers:
      - name: nodejs
        image: anujtoppo/nodejs-backend:v1  # Replace with your actual image
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
        env:
        - name: DATABASE_URL
          value: "mongodb://mongo-0.mongo-headless.dev.svc.cluster.local:27017/ecommerce-db"
        command: ["sh", "-c"]
        args:
        - |
          npx prisma db push &&
          node app.js
        resources:
          requests:
            cpu: "500m"
            memory: "500Mi"
          limits:
            cpu: "1"
            memory: "2Gi"
        livenessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 5
            periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: backend-api
  annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
  labels:
    app.kubernetes.io/part-of: nodejs-app
spec:
  selector:
    app: nodejs
  ports:
    - protocol: TCP
      port: 3000  # External port
      targetPort: 3000  # Container port
  type: ClusterIP